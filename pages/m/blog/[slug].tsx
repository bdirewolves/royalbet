import styled from "styled-components";
import ReviewSection from "@/components/pages/mobile/home/reviewSection";
import Head from "next/head";
import { blogContent, IBlogContent } from "@/constants/blog";
import KnowledgeSection from "@/components/pages/mobile/blog/blogSection";
import NewsSection from "@/components/pages/mobile/blog/newsSection";
import CheckDevice from "@/services";
import { GetStaticPaths, GetStaticProps } from "next";
import { useEffect, useRef, useState } from "react";
import { useRouter } from "next/router";

export default function BlogSlug(){
    const router = useRouter()
    const [ currentBlog, setCurrentBlog ] = useState<IBlogContent>(blogContent.find((item) => item.slug.includes(decodeURIComponent(router.query.slug as string)))!)

    CheckDevice()


    return(
        <>
            <Head>
                <title>Blog | Vincebet</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <KnowledgeSection content={currentBlog} />
                {
                    !router.query.slug ?
                    <NewsSection />
                    :null
                }
            </main>
        </>
    )
}

export const getStaticPaths: GetStaticPaths = async () => {
    return {
        paths: [
            {
                params: { slug: decodeURI("สวัสดี") }
            },
            {
                params: { slug: decodeURI("สวัสดีปี") }
            },
            {
                params: { slug: decodeURI("สวัสดีปีใหม่") }
            },
        ],
        fallback: false
    }
}

export const getStaticProps: GetStaticProps = async () => {
    return {
        props: {
            posts: [
                { slug: decodeURI("สวัสดี") },
                { slug: decodeURI("สวัสดีปี") },
                { slug: decodeURI("สวัสดีปีใหม่") },
            ]
        }
    }
}